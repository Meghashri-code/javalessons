<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="14" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-10-02T21:45:16 EDT" name="Loan Department" finished-at="2021-10-02T21:45:16 EDT" duration-ms="68">
    <groups>
      <group name="Smoke">
        <method signature="day4.MobileLoginhome()[pri:0, instance:Test.day4@193f604a]" name="MobileLoginhome" class="Test.day4"/>
        <method signature="day3.Mobilecar()[pri:0, instance:Test.day3@25fb8912]" name="Mobilecar" class="Test.day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2021-10-02T21:45:16 EDT" name="Car loan" finished-at="2021-10-02T21:45:16 EDT" duration-ms="67">
      <class name="Test.day1">
        <test-method is-config="true" signature="First()[pri:0, instance:Test.day1@49912c99]" started-at="2021-10-02T21:45:16 EDT" name="First" finished-at="2021-10-02T21:45:16 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- First -->
      </class> <!-- Test.day1 -->
      <class name="Test.day3">
        <test-method is-config="true" signature="First()[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="First" finished-at="2021-10-02T21:45:16 EDT" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- First -->
        <test-method is-config="true" signature="before()[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="before" finished-at="2021-10-02T21:45:16 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="LoginAPIcarloan()[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="LoginAPIcarloan" finished-at="2021-10-02T21:45:16 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIcarloan -->
        <test-method signature="MobileLogincar()[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="MobileLogincar" finished-at="2021-10-02T21:45:16 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogincar -->
        <test-method is-config="true" signature="Afterallmethods()[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="Afterallmethods" finished-at="2021-10-02T21:45:16 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afterallmethods -->
        <test-method is-config="true" signature="LoginAPIcarloan()[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="LoginAPIcarloan" finished-at="2021-10-02T21:45:16 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIcarloan -->
        <test-method signature="Mobilecar()[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="Mobilecar" finished-at="2021-10-02T21:45:16 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobilecar -->
        <test-method is-config="true" signature="Afterallmethods()[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="Afterallmethods" finished-at="2021-10-02T21:45:16 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afterallmethods -->
        <test-method is-config="true" signature="LoginAPIcarloan()[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="LoginAPIcarloan" finished-at="2021-10-02T21:45:16 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIcarloan -->
        <test-method signature="Mobiledancecar(java.lang.String,java.lang.String)[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="Mobiledancecar" data-provider="getData" finished-at="2021-10-02T21:45:16 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusrname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstsetpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobiledancecar -->
        <test-method is-config="true" signature="Afterallmethods()[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="Afterallmethods" finished-at="2021-10-02T21:45:16 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afterallmethods -->
        <test-method is-config="true" signature="LoginAPIcarloan()[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="LoginAPIcarloan" finished-at="2021-10-02T21:45:16 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIcarloan -->
        <test-method signature="Mobiledancecar(java.lang.String,java.lang.String)[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="Mobiledancecar" data-provider="getData" finished-at="2021-10-02T21:45:16 EDT" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusrname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondsetpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobiledancecar -->
        <test-method is-config="true" signature="Afterallmethods()[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="Afterallmethods" finished-at="2021-10-02T21:45:16 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afterallmethods -->
        <test-method signature="Mobiledancecar(java.lang.String,java.lang.String)[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="Mobiledancecar" data-provider="getData" finished-at="2021-10-02T21:45:16 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Thirdsetusrname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Thirdsetpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobiledancecar -->
        <test-method is-config="true" signature="LoginAPIcarloan()[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="LoginAPIcarloan" finished-at="2021-10-02T21:45:16 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIcarloan -->
        <test-method is-config="true" signature="LoginAPIcarloan()[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="LoginAPIcarloan" finished-at="2021-10-02T21:45:16 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIcarloan -->
        <test-method is-config="true" signature="Afterallmethods()[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="Afterallmethods" finished-at="2021-10-02T21:45:16 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afterallmethods -->
        <test-method signature="Mobilesetcar(java.lang.String,java.lang.String)[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="Mobilesetcar" finished-at="2021-10-02T21:45:16 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobilesetcar -->
        <test-method is-config="true" signature="Afterallmethods()[pri:0, instance:Test.day3@25fb8912]" started-at="2021-10-02T21:45:16 EDT" name="Afterallmethods" finished-at="2021-10-02T21:45:16 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afterallmethods -->
      </class> <!-- Test.day3 -->
    </test> <!-- Car loan -->
    <test started-at="2021-10-02T21:45:16 EDT" name="Personal loan" finished-at="2021-10-02T21:45:16 EDT" duration-ms="65">
      <class name="Test.day1">
        <test-method signature="Demo()[pri:0, instance:Test.day1@49912c99]" started-at="2021-10-02T21:45:16 EDT" name="Demo" finished-at="2021-10-02T21:45:16 EDT" duration-ms="5" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Test.day1.Demo(day1.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="before()[pri:0, instance:Test.day1@49912c99]" started-at="2021-10-02T21:45:16 EDT" name="before" finished-at="2021-10-02T21:45:16 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="after()[pri:0, instance:Test.day1@49912c99]" started-at="2021-10-02T21:45:16 EDT" name="after" finished-at="2021-10-02T21:45:16 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- Test.day1 -->
      <class name="Test.day2">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:Test.day2@6c130c45]" started-at="2021-10-02T21:45:16 EDT" name="prerequisite" finished-at="2021-10-02T21:45:16 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method signature="parameter(java.lang.String)[pri:0, instance:Test.day2@6c130c45]" started-at="2021-10-02T21:45:16 EDT" name="parameter" finished-at="2021-10-02T21:45:16 EDT" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qaclickacademy.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parameter -->
        <test-method signature="ploan()[pri:0, instance:Test.day2@6c130c45]" started-at="2021-10-02T21:45:16 EDT" name="ploan" finished-at="2021-10-02T21:45:16 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- Test.day2 -->
      <class name="Test.day4">
        <test-method signature="MobileLoginhome()[pri:0, instance:Test.day4@193f604a]" started-at="2021-10-02T21:45:16 EDT" name="MobileLoginhome" finished-at="2021-10-02T21:45:16 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginhome -->
        <test-method signature="WebLoginhome()[pri:0, instance:Test.day4@193f604a]" started-at="2021-10-02T21:45:16 EDT" name="WebLoginhome" finished-at="2021-10-02T21:45:16 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginhome -->
        <test-method signature="LoginAPIcarloanhome()[pri:0, instance:Test.day4@193f604a]" started-at="2021-10-02T21:45:16 EDT" name="LoginAPIcarloanhome" finished-at="2021-10-02T21:45:16 EDT" depends-on-methods="Test.day4.MobileLoginhome, Test.day4.WebLoginhome" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIcarloanhome -->
      </class> <!-- Test.day4 -->
    </test> <!-- Personal loan -->
  </suite> <!-- Loan Department -->
</testng-results>
